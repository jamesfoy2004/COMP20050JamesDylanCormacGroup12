Index: src/main/java/comp20050/hexagonalboard/HelloApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package comp20050.hexagonalboard;\r\n\r\nimport javafx.animation.KeyFrame;\r\nimport javafx.animation.Timeline;\r\nimport javafx.application.Application;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.shape.Polygon;\r\nimport javafx.stage.Stage;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Alert;\r\nimport javafx.scene.control.Alert.AlertType;\r\nimport javafx.scene.control.ButtonType;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.transform.Scale;\r\nimport javafx.util.Duration;\r\n\r\n\r\nimport java.io.IOException;\r\nimport java.util.List;\r\n\r\npublic class HelloApplication extends Application {\r\n    Button button;\r\n\r\n    //red turn and blue turn pop-ups\r\n    Button redButton;\r\n    Button blueButton;\r\n\r\n    private List<Polygon> hexagons;\r\n\r\n    //used for dictating how long a pop-up runs\r\n    private Timeline redTime;\r\n    private Timeline blueTime;\r\n\r\n\r\n    private boolean isRedTurn = true;\r\n\r\n    public boolean isRedTurn() {\r\n        return isRedTurn;\r\n    }\r\n\r\n    public void setRedTurn(boolean redTurn) {\r\n        isRedTurn = redTurn;\r\n    }\r\n\r\n    @Override\r\n    public void start(Stage stage) throws IOException {\r\n        FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource(\"/comp20050/hexagonalboard/hello-view.fxml\"));\r\n\r\n        AnchorPane container = new AnchorPane();\r\n        AnchorPane root = fxmlLoader.load();\r\n        container.getChildren().add(root);\r\n        Scene scene = new Scene(container, 800, 700);\r\n\r\n        button = new Button();\r\n        button.setStyle(\"-fx-background-color: yellow; -fx-text-fill: blue; -fx-border-colour: red; -fx-border-style: solid; -fx-border-width: 20; -fx-font-weight: bold; -fx-font-size: 32\");\r\n        button.setText(\"Quit\");\r\n        button.setPrefHeight(200);\r\n        button.setPrefWidth(400);\r\n        button.setOnAction(event -> {\r\n            Alert alert = new Alert(AlertType.CONFIRMATION);\r\n            alert.setTitle(\"Quit Confirmation\");\r\n            alert.setHeaderText(null);\r\n            alert.setContentText(\"Are you sure you want to quit?\");\r\n            ButtonType result = alert.showAndWait().orElse(ButtonType.CANCEL);\r\n            if (result == ButtonType.YES) {\r\n                //save to file\r\n                stage.close();\r\n                //quit application\r\n        }});\r\n\r\n        root.getChildren().add(button);\r\n        AnchorPane.setLeftAnchor(button, 0.0);\r\n        AnchorPane.setBottomAnchor(button, 10.0);\r\n\r\n\r\n        //red pop-up\r\n        redButton = new Button();\r\n        redButton.setStyle(\"-fx-background-color: white; -fx-text-fill: black;  -fx-border-style: none; -fx-background-radius: 30; -fx-border-width: 20; -fx-font-weight: bold; -fx-font-size: 32\");\r\n        redButton.setText(\" : RED player's turn\");\r\n        redButton.setPrefHeight(200);\r\n        redButton.setPrefWidth(500);\r\n        redButton.setVisible(false);\r\n\r\n        //add red circle to pop-up\r\n        Image image = new Image(getClass().getResourceAsStream(\"red.png\"));\r\n        ImageView iview = new ImageView(image);\r\n\r\n        iview.setFitWidth(50);\r\n        iview.setFitHeight(50);\r\n        iview.setPreserveRatio(true);\r\n\r\n        redButton.setGraphic(iview);\r\n\r\n        root.getChildren().add(redButton);\r\n        AnchorPane.setLeftAnchor(redButton, 450.0);\r\n        AnchorPane.setTopAnchor(redButton, 600.0);\r\n\r\n        //blue pop-up\r\n        blueButton = new Button();\r\n        blueButton.setStyle(\"-fx-background-color: white; -fx-text-fill: black;  -fx-border-style: none; -fx-background-radius: 30; -fx-border-width: 20; -fx-font-weight: bold; -fx-font-size: 32\");\r\n        blueButton.setText(\" : BLUE player's turn\");\r\n        blueButton.setPrefHeight(200);\r\n        blueButton.setPrefWidth(500);\r\n        blueButton.setVisible(false);\r\n\r\n        //add blue circle to pop-up\r\n        Image imageBlue = new Image(getClass().getResourceAsStream(\"blue.png\"));\r\n        ImageView iviewBlue = new ImageView(imageBlue);\r\n\r\n        iviewBlue.setFitWidth(50);\r\n        iviewBlue.setFitHeight(50);\r\n        iviewBlue.setPreserveRatio(true);\r\n\r\n        blueButton.setGraphic(iviewBlue);\r\n\r\n        root.getChildren().add(blueButton);\r\n        AnchorPane.setLeftAnchor(blueButton, 450.0);\r\n        AnchorPane.setTopAnchor(blueButton, 600.0);\r\n\r\n\r\n\r\n        HelloController controller = fxmlLoader.getController();\r\n        controller.setApp(this);\r\n        hexagons = controller.getHexagons();\r\n\r\n        //method which defines how long the pop-ups run\r\n        makeTimeLines();\r\n\r\n        //by default start game with red players turn\r\n        redTime.play();\r\n        redButton.setVisible(true);\r\n        for(Polygon hexagon : hexagons) {\r\n            hexagon.setDisable(true);\r\n            hexagon.setOpacity(0.5);\r\n        }\r\n\r\n\r\n        Scale scale = new Scale(0.5, 0.5);\r\n        root.getTransforms().add(scale);\r\n\r\n        root.setTranslateX(50);\r\n        root.setTranslateY(0);\r\n\r\n        stage.setTitle(\"HexOust\");\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n\r\n    public void makeTimeLines(){\r\n        redTime = new Timeline(new KeyFrame(\r\n                Duration.seconds(2),\r\n                event ->{\r\n                    for(Polygon hexagon : hexagons) {\r\n                        hexagon.setDisable(false);\r\n                        hexagon.setOpacity(1);\r\n                    }\r\n                    redButton.setVisible(false);\r\n                }\r\n        ));\r\n\r\n        blueTime = new Timeline(new KeyFrame(\r\n                Duration.seconds(2),\r\n                eventBlue ->{\r\n                    for(Polygon hexagon : hexagons) {\r\n                        hexagon.setDisable(false);\r\n                        hexagon.setOpacity(1);\r\n                    }\r\n                    blueButton.setVisible(false);\r\n                }\r\n        ));\r\n    }\r\n\r\n    public void playerTurn(Polygon hexagon){\r\n\r\n        if(isRedTurn()){\r\n            RedPlayer(hexagon);\r\n            setRedTurn(false);\r\n        }\r\n        else{\r\n            BluePlayer(hexagon);\r\n            setRedTurn(true);\r\n        }\r\n    }\r\n\r\n    public void RedPlayer(Polygon hex){\r\n        //colour given hex red\r\n        hex.setFill(Color.RED);\r\n\r\n        //show BLUE TURN pop up\r\n        blueTime.play();\r\n        blueButton.setVisible(true);\r\n        for(Polygon hexagon : hexagons) {\r\n            hexagon.setDisable(true);\r\n            hexagon.setOpacity(0.5);\r\n        }\r\n    }\r\n\r\n    public void BluePlayer(Polygon hex){\r\n        //colour given hex blue\r\n        hex.setFill(Color.BLUE);\r\n\r\n        //show RED TURN pop up\r\n        redTime.play();\r\n        redButton.setVisible(true);\r\n        for(Polygon hexagon : hexagons) {\r\n            hexagon.setDisable(true);\r\n            hexagon.setOpacity(0.5);\r\n        }\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        launch();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/comp20050/hexagonalboard/HelloApplication.java b/src/main/java/comp20050/hexagonalboard/HelloApplication.java
--- a/src/main/java/comp20050/hexagonalboard/HelloApplication.java	(revision ff6e145579947faf84c7e924a56df25c6f054a81)
+++ b/src/main/java/comp20050/hexagonalboard/HelloApplication.java	(date 1741555211278)
@@ -18,7 +18,6 @@
 import javafx.scene.transform.Scale;
 import javafx.util.Duration;
 
-
 import java.io.IOException;
 import java.util.List;
 
